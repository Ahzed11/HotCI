name: Publish tarball

on:
  push:
    tags: [ "v[0-9]+.[0-9]+.[0-9]+" ]

jobs:

  build:
    name: Prepare build artifacts
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Necessary to get all the commits and tags
      - uses: ./.github/setup-beam

      - name: Get latest release
        id: get-latest-release
        uses: ahzed11/get-latest-release-action@v1.2
        with:
          keepv: false

      - name: Fetch manifest version
        run: |
          NEW_VSN=${GITHUB_REF##*/v}
          echo "VSN=$NEW_VSN" >> $GITHUB_ENV
          
          OLD_VSN=${{steps.get-latest-release.outputs.release}}
          echo "OLD_VSN=$OLD_VSN" >> $GITHUB_ENV

          IS_UPGRADE=$(echo "$NEW_VSN $OLD_VSN" | awk -vFS='[. ]' '($1==$4 && $2>$5) || ($1==$4 && $2>=$5 && $3>$6) {print 1; exit} {print 0}')
          if [ "$IS_UPGRADE" -eq 1 ]; then
              echo "RELUP=1" >> $GITHUB_ENV
          else
              echo "RELUP=0" >> $GITHUB_ENV
          fi
      - run: |
          echo "${{ env.OLD_VSN }} -> ${{ env.VSN }} : ${{ env.RELUP }}"
      
      - name: Build a tarball
        working-directory: .
        run: |
          RELNAME=$(./scripts/get_release_name ./rebar.config)
          if [ ${{ env.RELUP }} -eq 1 ]; then
            ORIG=$(/usr/bin/git log -1 --format='%H')
            git checkout v${{ env.OLD_VSN }}
            rebar3 do clean -a, release
            git checkout $ORIG
            rebar3 do clean -a, release
            rebar3 appup generate
            rebar3 relup -n $RELNAME -v ${{ env.VSN }} -u ${{ env.OLD_VSN }}
          else
            rebar3 release
          fi
          rebar3 tar
          BUILD=$(ls _build/default/rel/$RELNAME/$RELNAME-*.tar.gz)
          mkdir ./_artifacts
          cp $BUILD ./_artifacts/$RELNAME-${{ env.VSN }}.tar.gz
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: artifacts
          path: _artifacts
          retention-days: 1

  publish:
    name: Publish build artifacts
    needs: build
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: write

    steps:
      - name: Get build artifacts
        uses: actions/download-artifact@v4
        with:
          name: artifacts
          path: _artifacts

      - name: Upload release
        uses: ncipollo/release-action@v1
        with:
          artifacts: |
            _artifacts/*.tar.gz
